/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.AlbumPermissions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Available permissions for groups
 */
@JsonPropertyOrder({
  GroupPermissions.JSON_PROPERTY_ALBUMS,
  GroupPermissions.JSON_PROPERTY_UPLOAD_TO_UPLOAD_AREA,
  GroupPermissions.JSON_PROPERTY_MANAGE_TAXONOMIES,
  GroupPermissions.JSON_PROPERTY_CHANGE_SITE_APPEARANCE,
  GroupPermissions.JSON_PROPERTY_APPROVE_PENDING_SIGNUPS,
  GroupPermissions.JSON_PROPERTY_MANAGE_WEBHOOKS,
  GroupPermissions.JSON_PROPERTY_SHARE_BOOKMARKS,
  GroupPermissions.JSON_PROPERTY_MODERATE_COMMENTS,
  GroupPermissions.JSON_PROPERTY_MANAGE_ALBUMS,
  GroupPermissions.JSON_PROPERTY_MANAGE_EXPORTS,
  GroupPermissions.JSON_PROPERTY_MANAGE_SETTINGS,
  GroupPermissions.JSON_PROPERTY_INVITE_USERS,
  GroupPermissions.JSON_PROPERTY_APPROVE_ORDERS,
  GroupPermissions.JSON_PROPERTY_SHARE_CROP_AND_DOWNLOAD_PRESETS,
  GroupPermissions.JSON_PROPERTY_IS_IN_DESIGN_EDITOR,
  GroupPermissions.JSON_PROPERTY_MANAGE_USERS,
  GroupPermissions.JSON_PROPERTY_MANAGE_ANNOTATIONS,
  GroupPermissions.JSON_PROPERTY_MANAGE_ARCHIVES,
  GroupPermissions.JSON_PROPERTY_MANAGE_WORKFLOWS,
  GroupPermissions.JSON_PROPERTY_MANAGE_SERVICES,
  GroupPermissions.JSON_PROPERTY_AUDIT,
  GroupPermissions.JSON_PROPERTY_CONFIGURE_CONSENT_FORMS,
  GroupPermissions.JSON_PROPERTY_API,
  GroupPermissions.JSON_PROPERTY_MANAGE_ACTIVITY_EXPORTS,
  GroupPermissions.JSON_PROPERTY_MANAGE_ACTIVITY_LOGGING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GroupPermissions {
  public static final String JSON_PROPERTY_ALBUMS = "albums";
  private AlbumPermissions albums;

  public static final String JSON_PROPERTY_UPLOAD_TO_UPLOAD_AREA = "uploadToUploadArea";
  private Boolean uploadToUploadArea;

  public static final String JSON_PROPERTY_MANAGE_TAXONOMIES = "manageTaxonomies";
  private Boolean manageTaxonomies;

  public static final String JSON_PROPERTY_CHANGE_SITE_APPEARANCE = "changeSiteAppearance";
  private Boolean changeSiteAppearance;

  public static final String JSON_PROPERTY_APPROVE_PENDING_SIGNUPS = "approvePendingSignups";
  private Boolean approvePendingSignups;

  public static final String JSON_PROPERTY_MANAGE_WEBHOOKS = "manageWebhooks";
  private Boolean manageWebhooks;

  public static final String JSON_PROPERTY_SHARE_BOOKMARKS = "shareBookmarks";
  private Boolean shareBookmarks;

  public static final String JSON_PROPERTY_MODERATE_COMMENTS = "moderateComments";
  private Boolean moderateComments;

  public static final String JSON_PROPERTY_MANAGE_ALBUMS = "manageAlbums";
  private Boolean manageAlbums;

  public static final String JSON_PROPERTY_MANAGE_EXPORTS = "manageExports";
  private Boolean manageExports;

  public static final String JSON_PROPERTY_MANAGE_SETTINGS = "manageSettings";
  private Boolean manageSettings;

  public static final String JSON_PROPERTY_INVITE_USERS = "inviteUsers";
  private Boolean inviteUsers;

  public static final String JSON_PROPERTY_APPROVE_ORDERS = "approveOrders";
  private Boolean approveOrders;

  public static final String JSON_PROPERTY_SHARE_CROP_AND_DOWNLOAD_PRESETS = "shareCropAndDownloadPresets";
  private Boolean shareCropAndDownloadPresets;

  public static final String JSON_PROPERTY_IS_IN_DESIGN_EDITOR = "isInDesignEditor";
  private Boolean isInDesignEditor;

  public static final String JSON_PROPERTY_MANAGE_USERS = "manageUsers";
  private Boolean manageUsers;

  public static final String JSON_PROPERTY_MANAGE_ANNOTATIONS = "manageAnnotations";
  private Boolean manageAnnotations;

  public static final String JSON_PROPERTY_MANAGE_ARCHIVES = "manageArchives";
  private Boolean manageArchives;

  public static final String JSON_PROPERTY_MANAGE_WORKFLOWS = "manageWorkflows";
  private Boolean manageWorkflows;

  public static final String JSON_PROPERTY_MANAGE_SERVICES = "manageServices";
  private Boolean manageServices;

  public static final String JSON_PROPERTY_AUDIT = "audit";
  private Boolean audit;

  public static final String JSON_PROPERTY_CONFIGURE_CONSENT_FORMS = "configureConsentForms";
  private Boolean configureConsentForms;

  public static final String JSON_PROPERTY_API = "api";
  private Boolean api;

  public static final String JSON_PROPERTY_MANAGE_ACTIVITY_EXPORTS = "manageActivityExports";
  private Boolean manageActivityExports;

  public static final String JSON_PROPERTY_MANAGE_ACTIVITY_LOGGING = "manageActivityLogging";
  private Boolean manageActivityLogging;

  public GroupPermissions() { 
  }

  public GroupPermissions albums(AlbumPermissions albums) {
    this.albums = albums;
    return this;
  }

   /**
   * Get albums
   * @return albums
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALBUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlbumPermissions getAlbums() {
    return albums;
  }


  @JsonProperty(JSON_PROPERTY_ALBUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlbums(AlbumPermissions albums) {
    this.albums = albums;
  }


  public GroupPermissions uploadToUploadArea(Boolean uploadToUploadArea) {
    this.uploadToUploadArea = uploadToUploadArea;
    return this;
  }

   /**
   * Upload to upload area
   * @return uploadToUploadArea
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOAD_TO_UPLOAD_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUploadToUploadArea() {
    return uploadToUploadArea;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD_TO_UPLOAD_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadToUploadArea(Boolean uploadToUploadArea) {
    this.uploadToUploadArea = uploadToUploadArea;
  }


  public GroupPermissions manageTaxonomies(Boolean manageTaxonomies) {
    this.manageTaxonomies = manageTaxonomies;
    return this;
  }

   /**
   * Manage taxonomies
   * @return manageTaxonomies
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_TAXONOMIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageTaxonomies() {
    return manageTaxonomies;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_TAXONOMIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageTaxonomies(Boolean manageTaxonomies) {
    this.manageTaxonomies = manageTaxonomies;
  }


  public GroupPermissions changeSiteAppearance(Boolean changeSiteAppearance) {
    this.changeSiteAppearance = changeSiteAppearance;
    return this;
  }

   /**
   * Change site appearance
   * @return changeSiteAppearance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE_SITE_APPEARANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChangeSiteAppearance() {
    return changeSiteAppearance;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_SITE_APPEARANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangeSiteAppearance(Boolean changeSiteAppearance) {
    this.changeSiteAppearance = changeSiteAppearance;
  }


  public GroupPermissions approvePendingSignups(Boolean approvePendingSignups) {
    this.approvePendingSignups = approvePendingSignups;
    return this;
  }

   /**
   * Approve pending signups
   * @return approvePendingSignups
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVE_PENDING_SIGNUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApprovePendingSignups() {
    return approvePendingSignups;
  }


  @JsonProperty(JSON_PROPERTY_APPROVE_PENDING_SIGNUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovePendingSignups(Boolean approvePendingSignups) {
    this.approvePendingSignups = approvePendingSignups;
  }


  public GroupPermissions manageWebhooks(Boolean manageWebhooks) {
    this.manageWebhooks = manageWebhooks;
    return this;
  }

   /**
   * Manage webhooks
   * @return manageWebhooks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageWebhooks() {
    return manageWebhooks;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageWebhooks(Boolean manageWebhooks) {
    this.manageWebhooks = manageWebhooks;
  }


  public GroupPermissions shareBookmarks(Boolean shareBookmarks) {
    this.shareBookmarks = shareBookmarks;
    return this;
  }

   /**
   * Share bookmarks
   * @return shareBookmarks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE_BOOKMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShareBookmarks() {
    return shareBookmarks;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_BOOKMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareBookmarks(Boolean shareBookmarks) {
    this.shareBookmarks = shareBookmarks;
  }


  public GroupPermissions moderateComments(Boolean moderateComments) {
    this.moderateComments = moderateComments;
    return this;
  }

   /**
   * Moderate comments
   * @return moderateComments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODERATE_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getModerateComments() {
    return moderateComments;
  }


  @JsonProperty(JSON_PROPERTY_MODERATE_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModerateComments(Boolean moderateComments) {
    this.moderateComments = moderateComments;
  }


  public GroupPermissions manageAlbums(Boolean manageAlbums) {
    this.manageAlbums = manageAlbums;
    return this;
  }

   /**
   * Manage albums
   * @return manageAlbums
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_ALBUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageAlbums() {
    return manageAlbums;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_ALBUMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageAlbums(Boolean manageAlbums) {
    this.manageAlbums = manageAlbums;
  }


  public GroupPermissions manageExports(Boolean manageExports) {
    this.manageExports = manageExports;
    return this;
  }

   /**
   * Manage exports
   * @return manageExports
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageExports() {
    return manageExports;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageExports(Boolean manageExports) {
    this.manageExports = manageExports;
  }


  public GroupPermissions manageSettings(Boolean manageSettings) {
    this.manageSettings = manageSettings;
    return this;
  }

   /**
   * Manage settings
   * @return manageSettings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageSettings() {
    return manageSettings;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageSettings(Boolean manageSettings) {
    this.manageSettings = manageSettings;
  }


  public GroupPermissions inviteUsers(Boolean inviteUsers) {
    this.inviteUsers = inviteUsers;
    return this;
  }

   /**
   * Invite users
   * @return inviteUsers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVITE_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInviteUsers() {
    return inviteUsers;
  }


  @JsonProperty(JSON_PROPERTY_INVITE_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInviteUsers(Boolean inviteUsers) {
    this.inviteUsers = inviteUsers;
  }


  public GroupPermissions approveOrders(Boolean approveOrders) {
    this.approveOrders = approveOrders;
    return this;
  }

   /**
   * Approve orders
   * @return approveOrders
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVE_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApproveOrders() {
    return approveOrders;
  }


  @JsonProperty(JSON_PROPERTY_APPROVE_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproveOrders(Boolean approveOrders) {
    this.approveOrders = approveOrders;
  }


  public GroupPermissions shareCropAndDownloadPresets(Boolean shareCropAndDownloadPresets) {
    this.shareCropAndDownloadPresets = shareCropAndDownloadPresets;
    return this;
  }

   /**
   * Share crop and download presets
   * @return shareCropAndDownloadPresets
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE_CROP_AND_DOWNLOAD_PRESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShareCropAndDownloadPresets() {
    return shareCropAndDownloadPresets;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_CROP_AND_DOWNLOAD_PRESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareCropAndDownloadPresets(Boolean shareCropAndDownloadPresets) {
    this.shareCropAndDownloadPresets = shareCropAndDownloadPresets;
  }


  public GroupPermissions isInDesignEditor(Boolean isInDesignEditor) {
    this.isInDesignEditor = isInDesignEditor;
    return this;
  }

   /**
   * Is in design editor
   * @return isInDesignEditor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_IN_DESIGN_EDITOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsInDesignEditor() {
    return isInDesignEditor;
  }


  @JsonProperty(JSON_PROPERTY_IS_IN_DESIGN_EDITOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsInDesignEditor(Boolean isInDesignEditor) {
    this.isInDesignEditor = isInDesignEditor;
  }


  public GroupPermissions manageUsers(Boolean manageUsers) {
    this.manageUsers = manageUsers;
    return this;
  }

   /**
   * Manage users
   * @return manageUsers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageUsers() {
    return manageUsers;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageUsers(Boolean manageUsers) {
    this.manageUsers = manageUsers;
  }


  public GroupPermissions manageAnnotations(Boolean manageAnnotations) {
    this.manageAnnotations = manageAnnotations;
    return this;
  }

   /**
   * Manage annotations
   * @return manageAnnotations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageAnnotations() {
    return manageAnnotations;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageAnnotations(Boolean manageAnnotations) {
    this.manageAnnotations = manageAnnotations;
  }


  public GroupPermissions manageArchives(Boolean manageArchives) {
    this.manageArchives = manageArchives;
    return this;
  }

   /**
   * Manage archives
   * @return manageArchives
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_ARCHIVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageArchives() {
    return manageArchives;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_ARCHIVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageArchives(Boolean manageArchives) {
    this.manageArchives = manageArchives;
  }


  public GroupPermissions manageWorkflows(Boolean manageWorkflows) {
    this.manageWorkflows = manageWorkflows;
    return this;
  }

   /**
   * Manage workflows
   * @return manageWorkflows
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_WORKFLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageWorkflows() {
    return manageWorkflows;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_WORKFLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageWorkflows(Boolean manageWorkflows) {
    this.manageWorkflows = manageWorkflows;
  }


  public GroupPermissions manageServices(Boolean manageServices) {
    this.manageServices = manageServices;
    return this;
  }

   /**
   * Manage services
   * @return manageServices
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageServices() {
    return manageServices;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageServices(Boolean manageServices) {
    this.manageServices = manageServices;
  }


  public GroupPermissions audit(Boolean audit) {
    this.audit = audit;
    return this;
  }

   /**
   * Audit
   * @return audit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAudit() {
    return audit;
  }


  @JsonProperty(JSON_PROPERTY_AUDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudit(Boolean audit) {
    this.audit = audit;
  }


  public GroupPermissions configureConsentForms(Boolean configureConsentForms) {
    this.configureConsentForms = configureConsentForms;
    return this;
  }

   /**
   * Configure consent forms
   * @return configureConsentForms
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIGURE_CONSENT_FORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConfigureConsentForms() {
    return configureConsentForms;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURE_CONSENT_FORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigureConsentForms(Boolean configureConsentForms) {
    this.configureConsentForms = configureConsentForms;
  }


  public GroupPermissions api(Boolean api) {
    this.api = api;
    return this;
  }

   /**
   * API
   * @return api
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApi() {
    return api;
  }


  @JsonProperty(JSON_PROPERTY_API)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApi(Boolean api) {
    this.api = api;
  }


  public GroupPermissions manageActivityExports(Boolean manageActivityExports) {
    this.manageActivityExports = manageActivityExports;
    return this;
  }

   /**
   * Manage activity exports
   * @return manageActivityExports
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_ACTIVITY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageActivityExports() {
    return manageActivityExports;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_ACTIVITY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageActivityExports(Boolean manageActivityExports) {
    this.manageActivityExports = manageActivityExports;
  }


  public GroupPermissions manageActivityLogging(Boolean manageActivityLogging) {
    this.manageActivityLogging = manageActivityLogging;
    return this;
  }

   /**
   * Manage activity logging
   * @return manageActivityLogging
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_ACTIVITY_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManageActivityLogging() {
    return manageActivityLogging;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_ACTIVITY_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageActivityLogging(Boolean manageActivityLogging) {
    this.manageActivityLogging = manageActivityLogging;
  }


  /**
   * Return true if this GroupPermissions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupPermissions groupPermissions = (GroupPermissions) o;
    return Objects.equals(this.albums, groupPermissions.albums) &&
        Objects.equals(this.uploadToUploadArea, groupPermissions.uploadToUploadArea) &&
        Objects.equals(this.manageTaxonomies, groupPermissions.manageTaxonomies) &&
        Objects.equals(this.changeSiteAppearance, groupPermissions.changeSiteAppearance) &&
        Objects.equals(this.approvePendingSignups, groupPermissions.approvePendingSignups) &&
        Objects.equals(this.manageWebhooks, groupPermissions.manageWebhooks) &&
        Objects.equals(this.shareBookmarks, groupPermissions.shareBookmarks) &&
        Objects.equals(this.moderateComments, groupPermissions.moderateComments) &&
        Objects.equals(this.manageAlbums, groupPermissions.manageAlbums) &&
        Objects.equals(this.manageExports, groupPermissions.manageExports) &&
        Objects.equals(this.manageSettings, groupPermissions.manageSettings) &&
        Objects.equals(this.inviteUsers, groupPermissions.inviteUsers) &&
        Objects.equals(this.approveOrders, groupPermissions.approveOrders) &&
        Objects.equals(this.shareCropAndDownloadPresets, groupPermissions.shareCropAndDownloadPresets) &&
        Objects.equals(this.isInDesignEditor, groupPermissions.isInDesignEditor) &&
        Objects.equals(this.manageUsers, groupPermissions.manageUsers) &&
        Objects.equals(this.manageAnnotations, groupPermissions.manageAnnotations) &&
        Objects.equals(this.manageArchives, groupPermissions.manageArchives) &&
        Objects.equals(this.manageWorkflows, groupPermissions.manageWorkflows) &&
        Objects.equals(this.manageServices, groupPermissions.manageServices) &&
        Objects.equals(this.audit, groupPermissions.audit) &&
        Objects.equals(this.configureConsentForms, groupPermissions.configureConsentForms) &&
        Objects.equals(this.api, groupPermissions.api) &&
        Objects.equals(this.manageActivityExports, groupPermissions.manageActivityExports) &&
        Objects.equals(this.manageActivityLogging, groupPermissions.manageActivityLogging);
  }

  @Override
  public int hashCode() {
    return Objects.hash(albums, uploadToUploadArea, manageTaxonomies, changeSiteAppearance, approvePendingSignups, manageWebhooks, shareBookmarks, moderateComments, manageAlbums, manageExports, manageSettings, inviteUsers, approveOrders, shareCropAndDownloadPresets, isInDesignEditor, manageUsers, manageAnnotations, manageArchives, manageWorkflows, manageServices, audit, configureConsentForms, api, manageActivityExports, manageActivityLogging);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupPermissions {\n");
    sb.append("    albums: ").append(toIndentedString(albums)).append("\n");
    sb.append("    uploadToUploadArea: ").append(toIndentedString(uploadToUploadArea)).append("\n");
    sb.append("    manageTaxonomies: ").append(toIndentedString(manageTaxonomies)).append("\n");
    sb.append("    changeSiteAppearance: ").append(toIndentedString(changeSiteAppearance)).append("\n");
    sb.append("    approvePendingSignups: ").append(toIndentedString(approvePendingSignups)).append("\n");
    sb.append("    manageWebhooks: ").append(toIndentedString(manageWebhooks)).append("\n");
    sb.append("    shareBookmarks: ").append(toIndentedString(shareBookmarks)).append("\n");
    sb.append("    moderateComments: ").append(toIndentedString(moderateComments)).append("\n");
    sb.append("    manageAlbums: ").append(toIndentedString(manageAlbums)).append("\n");
    sb.append("    manageExports: ").append(toIndentedString(manageExports)).append("\n");
    sb.append("    manageSettings: ").append(toIndentedString(manageSettings)).append("\n");
    sb.append("    inviteUsers: ").append(toIndentedString(inviteUsers)).append("\n");
    sb.append("    approveOrders: ").append(toIndentedString(approveOrders)).append("\n");
    sb.append("    shareCropAndDownloadPresets: ").append(toIndentedString(shareCropAndDownloadPresets)).append("\n");
    sb.append("    isInDesignEditor: ").append(toIndentedString(isInDesignEditor)).append("\n");
    sb.append("    manageUsers: ").append(toIndentedString(manageUsers)).append("\n");
    sb.append("    manageAnnotations: ").append(toIndentedString(manageAnnotations)).append("\n");
    sb.append("    manageArchives: ").append(toIndentedString(manageArchives)).append("\n");
    sb.append("    manageWorkflows: ").append(toIndentedString(manageWorkflows)).append("\n");
    sb.append("    manageServices: ").append(toIndentedString(manageServices)).append("\n");
    sb.append("    audit: ").append(toIndentedString(audit)).append("\n");
    sb.append("    configureConsentForms: ").append(toIndentedString(configureConsentForms)).append("\n");
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    manageActivityExports: ").append(toIndentedString(manageActivityExports)).append("\n");
    sb.append("    manageActivityLogging: ").append(toIndentedString(manageActivityLogging)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `albums` to the URL query string
    if (getAlbums() != null) {
      joiner.add(getAlbums().toUrlQueryString(prefix + "albums" + suffix));
    }

    // add `uploadToUploadArea` to the URL query string
    if (getUploadToUploadArea() != null) {
      joiner.add(String.format("%suploadToUploadArea%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUploadToUploadArea()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageTaxonomies` to the URL query string
    if (getManageTaxonomies() != null) {
      joiner.add(String.format("%smanageTaxonomies%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageTaxonomies()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `changeSiteAppearance` to the URL query string
    if (getChangeSiteAppearance() != null) {
      joiner.add(String.format("%schangeSiteAppearance%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getChangeSiteAppearance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `approvePendingSignups` to the URL query string
    if (getApprovePendingSignups() != null) {
      joiner.add(String.format("%sapprovePendingSignups%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getApprovePendingSignups()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageWebhooks` to the URL query string
    if (getManageWebhooks() != null) {
      joiner.add(String.format("%smanageWebhooks%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageWebhooks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `shareBookmarks` to the URL query string
    if (getShareBookmarks() != null) {
      joiner.add(String.format("%sshareBookmarks%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getShareBookmarks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `moderateComments` to the URL query string
    if (getModerateComments() != null) {
      joiner.add(String.format("%smoderateComments%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModerateComments()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageAlbums` to the URL query string
    if (getManageAlbums() != null) {
      joiner.add(String.format("%smanageAlbums%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageAlbums()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageExports` to the URL query string
    if (getManageExports() != null) {
      joiner.add(String.format("%smanageExports%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageExports()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageSettings` to the URL query string
    if (getManageSettings() != null) {
      joiner.add(String.format("%smanageSettings%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageSettings()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `inviteUsers` to the URL query string
    if (getInviteUsers() != null) {
      joiner.add(String.format("%sinviteUsers%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInviteUsers()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `approveOrders` to the URL query string
    if (getApproveOrders() != null) {
      joiner.add(String.format("%sapproveOrders%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getApproveOrders()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `shareCropAndDownloadPresets` to the URL query string
    if (getShareCropAndDownloadPresets() != null) {
      joiner.add(String.format("%sshareCropAndDownloadPresets%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getShareCropAndDownloadPresets()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isInDesignEditor` to the URL query string
    if (getIsInDesignEditor() != null) {
      joiner.add(String.format("%sisInDesignEditor%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsInDesignEditor()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageUsers` to the URL query string
    if (getManageUsers() != null) {
      joiner.add(String.format("%smanageUsers%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageUsers()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageAnnotations` to the URL query string
    if (getManageAnnotations() != null) {
      joiner.add(String.format("%smanageAnnotations%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageAnnotations()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageArchives` to the URL query string
    if (getManageArchives() != null) {
      joiner.add(String.format("%smanageArchives%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageArchives()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageWorkflows` to the URL query string
    if (getManageWorkflows() != null) {
      joiner.add(String.format("%smanageWorkflows%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageWorkflows()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageServices` to the URL query string
    if (getManageServices() != null) {
      joiner.add(String.format("%smanageServices%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageServices()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `audit` to the URL query string
    if (getAudit() != null) {
      joiner.add(String.format("%saudit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAudit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `configureConsentForms` to the URL query string
    if (getConfigureConsentForms() != null) {
      joiner.add(String.format("%sconfigureConsentForms%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getConfigureConsentForms()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `api` to the URL query string
    if (getApi() != null) {
      joiner.add(String.format("%sapi%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getApi()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageActivityExports` to the URL query string
    if (getManageActivityExports() != null) {
      joiner.add(String.format("%smanageActivityExports%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageActivityExports()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageActivityLogging` to the URL query string
    if (getManageActivityLogging() != null) {
      joiner.add(String.format("%smanageActivityLogging%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageActivityLogging()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


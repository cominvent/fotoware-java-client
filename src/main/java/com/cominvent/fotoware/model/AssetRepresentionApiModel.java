/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * API model to describe a for archive represention of an asset
 */
@JsonPropertyOrder({
  AssetRepresentionApiModel.JSON_PROPERTY_ARCHIVE_HREF,
  AssetRepresentionApiModel.JSON_PROPERTY_ARCHIVE_ID,
  AssetRepresentionApiModel.JSON_PROPERTY_ARCHIVE_NAME,
  AssetRepresentionApiModel.JSON_PROPERTY_ASSET_HREF
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AssetRepresentionApiModel {
  public static final String JSON_PROPERTY_ARCHIVE_HREF = "archiveHref";
  private String archiveHref;

  public static final String JSON_PROPERTY_ARCHIVE_ID = "archiveId";
  private Integer archiveId;

  public static final String JSON_PROPERTY_ARCHIVE_NAME = "archiveName";
  private String archiveName;

  public static final String JSON_PROPERTY_ASSET_HREF = "assetHref";
  private String assetHref;

  public AssetRepresentionApiModel() { 
  }

  public AssetRepresentionApiModel archiveHref(String archiveHref) {
    this.archiveHref = archiveHref;
    return this;
  }

   /**
   * URL of the archive
   * @return archiveHref
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVE_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getArchiveHref() {
    return archiveHref;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVE_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchiveHref(String archiveHref) {
    this.archiveHref = archiveHref;
  }


  public AssetRepresentionApiModel archiveId(Integer archiveId) {
    this.archiveId = archiveId;
    return this;
  }

   /**
   * Unique ID of the archive
   * @return archiveId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getArchiveId() {
    return archiveId;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchiveId(Integer archiveId) {
    this.archiveId = archiveId;
  }


  public AssetRepresentionApiModel archiveName(String archiveName) {
    this.archiveName = archiveName;
    return this;
  }

   /**
   * The name of the archive
   * @return archiveName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getArchiveName() {
    return archiveName;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchiveName(String archiveName) {
    this.archiveName = archiveName;
  }


  public AssetRepresentionApiModel assetHref(String assetHref) {
    this.assetHref = assetHref;
    return this;
  }

   /**
   * URL of the asset representation in the archive
   * @return assetHref
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssetHref() {
    return assetHref;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetHref(String assetHref) {
    this.assetHref = assetHref;
  }


  /**
   * Return true if this AssetRepresentionApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetRepresentionApiModel assetRepresentionApiModel = (AssetRepresentionApiModel) o;
    return Objects.equals(this.archiveHref, assetRepresentionApiModel.archiveHref) &&
        Objects.equals(this.archiveId, assetRepresentionApiModel.archiveId) &&
        Objects.equals(this.archiveName, assetRepresentionApiModel.archiveName) &&
        Objects.equals(this.assetHref, assetRepresentionApiModel.assetHref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archiveHref, archiveId, archiveName, assetHref);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetRepresentionApiModel {\n");
    sb.append("    archiveHref: ").append(toIndentedString(archiveHref)).append("\n");
    sb.append("    archiveId: ").append(toIndentedString(archiveId)).append("\n");
    sb.append("    archiveName: ").append(toIndentedString(archiveName)).append("\n");
    sb.append("    assetHref: ").append(toIndentedString(assetHref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `archiveHref` to the URL query string
    if (getArchiveHref() != null) {
      joiner.add(String.format("%sarchiveHref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getArchiveHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `archiveId` to the URL query string
    if (getArchiveId() != null) {
      joiner.add(String.format("%sarchiveId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getArchiveId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `archiveName` to the URL query string
    if (getArchiveName() != null) {
      joiner.add(String.format("%sarchiveName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getArchiveName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `assetHref` to the URL query string
    if (getAssetHref() != null) {
      joiner.add(String.format("%sassetHref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAssetHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


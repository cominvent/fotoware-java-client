/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.MetadataEditRequestJobMetadataInner;
import com.cominvent.fotoware.model.TaskStatusJobResultInnerChangedBuiltinFieldsInner;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TaskStatusJobResultInner
 */
@JsonPropertyOrder({
  TaskStatusJobResultInner.JSON_PROPERTY_CHANGED_BUILTIN_FIELDS,
  TaskStatusJobResultInner.JSON_PROPERTY_CHANGED_FIELDS,
  TaskStatusJobResultInner.JSON_PROPERTY_HREF,
  TaskStatusJobResultInner.JSON_PROPERTY_DONE,
  TaskStatusJobResultInner.JSON_PROPERTY_CHANGED_THUMBNAIL_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-20T14:14:21.267957+01:00[Europe/Oslo]")
public class TaskStatusJobResultInner {
  public static final String JSON_PROPERTY_CHANGED_BUILTIN_FIELDS = "changed-builtinFields";
  private List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedBuiltinFields;

  public static final String JSON_PROPERTY_CHANGED_FIELDS = "changed-fields";
  private List<MetadataEditRequestJobMetadataInner> changedFields;

  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  public static final String JSON_PROPERTY_DONE = "done";
  private Boolean done;

  public static final String JSON_PROPERTY_CHANGED_THUMBNAIL_FIELDS = "changed-thumbnailFields";
  private List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedThumbnailFields;

  public TaskStatusJobResultInner() { 
  }

  public TaskStatusJobResultInner changedBuiltinFields(List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedBuiltinFields) {
    this.changedBuiltinFields = changedBuiltinFields;
    return this;
  }

  public TaskStatusJobResultInner addChangedBuiltinFieldsItem(TaskStatusJobResultInnerChangedBuiltinFieldsInner changedBuiltinFieldsItem) {
    if (this.changedBuiltinFields == null) {
      this.changedBuiltinFields = new ArrayList<>();
    }
    this.changedBuiltinFields.add(changedBuiltinFieldsItem);
    return this;
  }

   /**
   * Get changedBuiltinFields
   * @return changedBuiltinFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGED_BUILTIN_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> getChangedBuiltinFields() {
    return changedBuiltinFields;
  }


  @JsonProperty(JSON_PROPERTY_CHANGED_BUILTIN_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangedBuiltinFields(List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedBuiltinFields) {
    this.changedBuiltinFields = changedBuiltinFields;
  }


  public TaskStatusJobResultInner changedFields(List<MetadataEditRequestJobMetadataInner> changedFields) {
    this.changedFields = changedFields;
    return this;
  }

  public TaskStatusJobResultInner addChangedFieldsItem(MetadataEditRequestJobMetadataInner changedFieldsItem) {
    if (this.changedFields == null) {
      this.changedFields = new ArrayList<>();
    }
    this.changedFields.add(changedFieldsItem);
    return this;
  }

   /**
   * Get changedFields
   * @return changedFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MetadataEditRequestJobMetadataInner> getChangedFields() {
    return changedFields;
  }


  @JsonProperty(JSON_PROPERTY_CHANGED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangedFields(List<MetadataEditRequestJobMetadataInner> changedFields) {
    this.changedFields = changedFields;
  }


  public TaskStatusJobResultInner href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public TaskStatusJobResultInner done(Boolean done) {
    this.done = done;
    return this;
  }

   /**
   * Get done
   * @return done
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDone() {
    return done;
  }


  @JsonProperty(JSON_PROPERTY_DONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDone(Boolean done) {
    this.done = done;
  }


  public TaskStatusJobResultInner changedThumbnailFields(List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedThumbnailFields) {
    this.changedThumbnailFields = changedThumbnailFields;
    return this;
  }

  public TaskStatusJobResultInner addChangedThumbnailFieldsItem(TaskStatusJobResultInnerChangedBuiltinFieldsInner changedThumbnailFieldsItem) {
    if (this.changedThumbnailFields == null) {
      this.changedThumbnailFields = new ArrayList<>();
    }
    this.changedThumbnailFields.add(changedThumbnailFieldsItem);
    return this;
  }

   /**
   * Get changedThumbnailFields
   * @return changedThumbnailFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGED_THUMBNAIL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> getChangedThumbnailFields() {
    return changedThumbnailFields;
  }


  @JsonProperty(JSON_PROPERTY_CHANGED_THUMBNAIL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangedThumbnailFields(List<TaskStatusJobResultInnerChangedBuiltinFieldsInner> changedThumbnailFields) {
    this.changedThumbnailFields = changedThumbnailFields;
  }


  /**
   * Return true if this TaskStatus_job_result_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskStatusJobResultInner taskStatusJobResultInner = (TaskStatusJobResultInner) o;
    return Objects.equals(this.changedBuiltinFields, taskStatusJobResultInner.changedBuiltinFields) &&
        Objects.equals(this.changedFields, taskStatusJobResultInner.changedFields) &&
        Objects.equals(this.href, taskStatusJobResultInner.href) &&
        Objects.equals(this.done, taskStatusJobResultInner.done) &&
        Objects.equals(this.changedThumbnailFields, taskStatusJobResultInner.changedThumbnailFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedBuiltinFields, changedFields, href, done, changedThumbnailFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskStatusJobResultInner {\n");
    sb.append("    changedBuiltinFields: ").append(toIndentedString(changedBuiltinFields)).append("\n");
    sb.append("    changedFields: ").append(toIndentedString(changedFields)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    done: ").append(toIndentedString(done)).append("\n");
    sb.append("    changedThumbnailFields: ").append(toIndentedString(changedThumbnailFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `changed-builtinFields` to the URL query string
    if (getChangedBuiltinFields() != null) {
      for (int i = 0; i < getChangedBuiltinFields().size(); i++) {
        if (getChangedBuiltinFields().get(i) != null) {
          joiner.add(getChangedBuiltinFields().get(i).toUrlQueryString(String.format("%schanged-builtinFields%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `changed-fields` to the URL query string
    if (getChangedFields() != null) {
      for (int i = 0; i < getChangedFields().size(); i++) {
        if (getChangedFields().get(i) != null) {
          joiner.add(getChangedFields().get(i).toUrlQueryString(String.format("%schanged-fields%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `href` to the URL query string
    if (getHref() != null) {
      joiner.add(String.format("%shref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `done` to the URL query string
    if (getDone() != null) {
      joiner.add(String.format("%sdone%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDone()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `changed-thumbnailFields` to the URL query string
    if (getChangedThumbnailFields() != null) {
      for (int i = 0; i < getChangedThumbnailFields().size(); i++) {
        if (getChangedThumbnailFields().get(i) != null) {
          joiner.add(getChangedThumbnailFields().get(i).toUrlQueryString(String.format("%schanged-thumbnailFields%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}


/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.FullAPIDescriptorViewsSubscription;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FullAPIDescriptorViews
 */
@JsonPropertyOrder({
  FullAPIDescriptorViews.JSON_PROPERTY_MANAGE_INVITATIONS,
  FullAPIDescriptorViews.JSON_PROPERTY_CHANGE_PASSWORD,
  FullAPIDescriptorViews.JSON_PROPERTY_MANAGE_SUBSCRIPTION,
  FullAPIDescriptorViews.JSON_PROPERTY_PRO,
  FullAPIDescriptorViews.JSON_PROPERTY_MANAGE_EXPORTS,
  FullAPIDescriptorViews.JSON_PROPERTY_ADMIN_WEBHOOKS,
  FullAPIDescriptorViews.JSON_PROPERTY_EDIT_TAXONOMY_ITEM,
  FullAPIDescriptorViews.JSON_PROPERTY_CREATE_INVITATIONS,
  FullAPIDescriptorViews.JSON_PROPERTY_SUBSCRIPTION,
  FullAPIDescriptorViews.JSON_PROPERTY_LOGGED_OUT,
  FullAPIDescriptorViews.JSON_PROPERTY_UPLOAD,
  FullAPIDescriptorViews.JSON_PROPERTY_SELECTION,
  FullAPIDescriptorViews.JSON_PROPERTY_SIGN_UP_ADMIN,
  FullAPIDescriptorViews.JSON_PROPERTY_MANAGE_CONSENT_FORMS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FullAPIDescriptorViews {
  public static final String JSON_PROPERTY_MANAGE_INVITATIONS = "manageInvitations";
  private String manageInvitations;

  public static final String JSON_PROPERTY_CHANGE_PASSWORD = "changePassword";
  private String changePassword;

  public static final String JSON_PROPERTY_MANAGE_SUBSCRIPTION = "manageSubscription";
  private String manageSubscription;

  public static final String JSON_PROPERTY_PRO = "pro";
  private String pro;

  public static final String JSON_PROPERTY_MANAGE_EXPORTS = "manage_exports";
  private String manageExports;

  public static final String JSON_PROPERTY_ADMIN_WEBHOOKS = "admin_webhooks";
  private String adminWebhooks;

  public static final String JSON_PROPERTY_EDIT_TAXONOMY_ITEM = "edit_taxonomy_item";
  private String editTaxonomyItem;

  public static final String JSON_PROPERTY_CREATE_INVITATIONS = "createInvitations";
  private String createInvitations;

  public static final String JSON_PROPERTY_SUBSCRIPTION = "subscription";
  private FullAPIDescriptorViewsSubscription subscription;

  public static final String JSON_PROPERTY_LOGGED_OUT = "loggedOut";
  private String loggedOut;

  public static final String JSON_PROPERTY_UPLOAD = "upload";
  private String upload;

  public static final String JSON_PROPERTY_SELECTION = "selection";
  private String selection;

  public static final String JSON_PROPERTY_SIGN_UP_ADMIN = "signUpAdmin";
  private String signUpAdmin;

  public static final String JSON_PROPERTY_MANAGE_CONSENT_FORMS = "manageConsentForms";
  private String manageConsentForms;

  public FullAPIDescriptorViews() { 
  }

  public FullAPIDescriptorViews manageInvitations(String manageInvitations) {
    this.manageInvitations = manageInvitations;
    return this;
  }

   /**
   * Get manageInvitations
   * @return manageInvitations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_INVITATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManageInvitations() {
    return manageInvitations;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_INVITATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageInvitations(String manageInvitations) {
    this.manageInvitations = manageInvitations;
  }


  public FullAPIDescriptorViews changePassword(String changePassword) {
    this.changePassword = changePassword;
    return this;
  }

   /**
   * Get changePassword
   * @return changePassword
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChangePassword() {
    return changePassword;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangePassword(String changePassword) {
    this.changePassword = changePassword;
  }


  public FullAPIDescriptorViews manageSubscription(String manageSubscription) {
    this.manageSubscription = manageSubscription;
    return this;
  }

   /**
   * Get manageSubscription
   * @return manageSubscription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManageSubscription() {
    return manageSubscription;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageSubscription(String manageSubscription) {
    this.manageSubscription = manageSubscription;
  }


  public FullAPIDescriptorViews pro(String pro) {
    this.pro = pro;
    return this;
  }

   /**
   * Get pro
   * @return pro
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPro() {
    return pro;
  }


  @JsonProperty(JSON_PROPERTY_PRO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPro(String pro) {
    this.pro = pro;
  }


  public FullAPIDescriptorViews manageExports(String manageExports) {
    this.manageExports = manageExports;
    return this;
  }

   /**
   * Get manageExports
   * @return manageExports
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManageExports() {
    return manageExports;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageExports(String manageExports) {
    this.manageExports = manageExports;
  }


  public FullAPIDescriptorViews adminWebhooks(String adminWebhooks) {
    this.adminWebhooks = adminWebhooks;
    return this;
  }

   /**
   * Get adminWebhooks
   * @return adminWebhooks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMIN_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminWebhooks() {
    return adminWebhooks;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminWebhooks(String adminWebhooks) {
    this.adminWebhooks = adminWebhooks;
  }


  public FullAPIDescriptorViews editTaxonomyItem(String editTaxonomyItem) {
    this.editTaxonomyItem = editTaxonomyItem;
    return this;
  }

   /**
   * Get editTaxonomyItem
   * @return editTaxonomyItem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EDIT_TAXONOMY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditTaxonomyItem() {
    return editTaxonomyItem;
  }


  @JsonProperty(JSON_PROPERTY_EDIT_TAXONOMY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditTaxonomyItem(String editTaxonomyItem) {
    this.editTaxonomyItem = editTaxonomyItem;
  }


  public FullAPIDescriptorViews createInvitations(String createInvitations) {
    this.createInvitations = createInvitations;
    return this;
  }

   /**
   * Get createInvitations
   * @return createInvitations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_INVITATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreateInvitations() {
    return createInvitations;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_INVITATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateInvitations(String createInvitations) {
    this.createInvitations = createInvitations;
  }


  public FullAPIDescriptorViews subscription(FullAPIDescriptorViewsSubscription subscription) {
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FullAPIDescriptorViewsSubscription getSubscription() {
    return subscription;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscription(FullAPIDescriptorViewsSubscription subscription) {
    this.subscription = subscription;
  }


  public FullAPIDescriptorViews loggedOut(String loggedOut) {
    this.loggedOut = loggedOut;
    return this;
  }

   /**
   * Get loggedOut
   * @return loggedOut
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGGED_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoggedOut() {
    return loggedOut;
  }


  @JsonProperty(JSON_PROPERTY_LOGGED_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoggedOut(String loggedOut) {
    this.loggedOut = loggedOut;
  }


  public FullAPIDescriptorViews upload(String upload) {
    this.upload = upload;
    return this;
  }

   /**
   * Get upload
   * @return upload
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpload() {
    return upload;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpload(String upload) {
    this.upload = upload;
  }


  public FullAPIDescriptorViews selection(String selection) {
    this.selection = selection;
    return this;
  }

   /**
   * Get selection
   * @return selection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelection() {
    return selection;
  }


  @JsonProperty(JSON_PROPERTY_SELECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelection(String selection) {
    this.selection = selection;
  }


  public FullAPIDescriptorViews signUpAdmin(String signUpAdmin) {
    this.signUpAdmin = signUpAdmin;
    return this;
  }

   /**
   * Get signUpAdmin
   * @return signUpAdmin
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGN_UP_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignUpAdmin() {
    return signUpAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SIGN_UP_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignUpAdmin(String signUpAdmin) {
    this.signUpAdmin = signUpAdmin;
  }


  public FullAPIDescriptorViews manageConsentForms(String manageConsentForms) {
    this.manageConsentForms = manageConsentForms;
    return this;
  }

   /**
   * Get manageConsentForms
   * @return manageConsentForms
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_CONSENT_FORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManageConsentForms() {
    return manageConsentForms;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_CONSENT_FORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageConsentForms(String manageConsentForms) {
    this.manageConsentForms = manageConsentForms;
  }


  /**
   * Return true if this FullAPIDescriptor_views object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullAPIDescriptorViews fullAPIDescriptorViews = (FullAPIDescriptorViews) o;
    return Objects.equals(this.manageInvitations, fullAPIDescriptorViews.manageInvitations) &&
        Objects.equals(this.changePassword, fullAPIDescriptorViews.changePassword) &&
        Objects.equals(this.manageSubscription, fullAPIDescriptorViews.manageSubscription) &&
        Objects.equals(this.pro, fullAPIDescriptorViews.pro) &&
        Objects.equals(this.manageExports, fullAPIDescriptorViews.manageExports) &&
        Objects.equals(this.adminWebhooks, fullAPIDescriptorViews.adminWebhooks) &&
        Objects.equals(this.editTaxonomyItem, fullAPIDescriptorViews.editTaxonomyItem) &&
        Objects.equals(this.createInvitations, fullAPIDescriptorViews.createInvitations) &&
        Objects.equals(this.subscription, fullAPIDescriptorViews.subscription) &&
        Objects.equals(this.loggedOut, fullAPIDescriptorViews.loggedOut) &&
        Objects.equals(this.upload, fullAPIDescriptorViews.upload) &&
        Objects.equals(this.selection, fullAPIDescriptorViews.selection) &&
        Objects.equals(this.signUpAdmin, fullAPIDescriptorViews.signUpAdmin) &&
        Objects.equals(this.manageConsentForms, fullAPIDescriptorViews.manageConsentForms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(manageInvitations, changePassword, manageSubscription, pro, manageExports, adminWebhooks, editTaxonomyItem, createInvitations, subscription, loggedOut, upload, selection, signUpAdmin, manageConsentForms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullAPIDescriptorViews {\n");
    sb.append("    manageInvitations: ").append(toIndentedString(manageInvitations)).append("\n");
    sb.append("    changePassword: ").append(toIndentedString(changePassword)).append("\n");
    sb.append("    manageSubscription: ").append(toIndentedString(manageSubscription)).append("\n");
    sb.append("    pro: ").append(toIndentedString(pro)).append("\n");
    sb.append("    manageExports: ").append(toIndentedString(manageExports)).append("\n");
    sb.append("    adminWebhooks: ").append(toIndentedString(adminWebhooks)).append("\n");
    sb.append("    editTaxonomyItem: ").append(toIndentedString(editTaxonomyItem)).append("\n");
    sb.append("    createInvitations: ").append(toIndentedString(createInvitations)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    loggedOut: ").append(toIndentedString(loggedOut)).append("\n");
    sb.append("    upload: ").append(toIndentedString(upload)).append("\n");
    sb.append("    selection: ").append(toIndentedString(selection)).append("\n");
    sb.append("    signUpAdmin: ").append(toIndentedString(signUpAdmin)).append("\n");
    sb.append("    manageConsentForms: ").append(toIndentedString(manageConsentForms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `manageInvitations` to the URL query string
    if (getManageInvitations() != null) {
      joiner.add(String.format("%smanageInvitations%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageInvitations()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `changePassword` to the URL query string
    if (getChangePassword() != null) {
      joiner.add(String.format("%schangePassword%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getChangePassword()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageSubscription` to the URL query string
    if (getManageSubscription() != null) {
      joiner.add(String.format("%smanageSubscription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageSubscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `pro` to the URL query string
    if (getPro() != null) {
      joiner.add(String.format("%spro%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPro()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manage_exports` to the URL query string
    if (getManageExports() != null) {
      joiner.add(String.format("%smanage_exports%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageExports()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `admin_webhooks` to the URL query string
    if (getAdminWebhooks() != null) {
      joiner.add(String.format("%sadmin_webhooks%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAdminWebhooks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `edit_taxonomy_item` to the URL query string
    if (getEditTaxonomyItem() != null) {
      joiner.add(String.format("%sedit_taxonomy_item%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEditTaxonomyItem()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `createInvitations` to the URL query string
    if (getCreateInvitations() != null) {
      joiner.add(String.format("%screateInvitations%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreateInvitations()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subscription` to the URL query string
    if (getSubscription() != null) {
      joiner.add(getSubscription().toUrlQueryString(prefix + "subscription" + suffix));
    }

    // add `loggedOut` to the URL query string
    if (getLoggedOut() != null) {
      joiner.add(String.format("%sloggedOut%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoggedOut()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `upload` to the URL query string
    if (getUpload() != null) {
      joiner.add(String.format("%supload%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUpload()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `selection` to the URL query string
    if (getSelection() != null) {
      joiner.add(String.format("%sselection%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSelection()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `signUpAdmin` to the URL query string
    if (getSignUpAdmin() != null) {
      joiner.add(String.format("%ssignUpAdmin%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSignUpAdmin()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `manageConsentForms` to the URL query string
    if (getManageConsentForms() != null) {
      joiner.add(String.format("%smanageConsentForms%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManageConsentForms()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


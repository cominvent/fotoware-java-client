/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FullAPIDescriptorOrderViews
 */
@JsonPropertyOrder({
  FullAPIDescriptorOrderViews.JSON_PROPERTY_CART,
  FullAPIDescriptorOrderViews.JSON_PROPERTY_HISTORY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FullAPIDescriptorOrderViews {
  public static final String JSON_PROPERTY_CART = "cart";
  private String cart;

  public static final String JSON_PROPERTY_HISTORY = "history";
  private String history;

  public FullAPIDescriptorOrderViews() { 
  }

  public FullAPIDescriptorOrderViews cart(String cart) {
    this.cart = cart;
    return this;
  }

   /**
   * Get cart
   * @return cart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCart() {
    return cart;
  }


  @JsonProperty(JSON_PROPERTY_CART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCart(String cart) {
    this.cart = cart;
  }


  public FullAPIDescriptorOrderViews history(String history) {
    this.history = history;
    return this;
  }

   /**
   * Get history
   * @return history
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHistory() {
    return history;
  }


  @JsonProperty(JSON_PROPERTY_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistory(String history) {
    this.history = history;
  }


  /**
   * Return true if this FullAPIDescriptor_order_views object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullAPIDescriptorOrderViews fullAPIDescriptorOrderViews = (FullAPIDescriptorOrderViews) o;
    return Objects.equals(this.cart, fullAPIDescriptorOrderViews.cart) &&
        Objects.equals(this.history, fullAPIDescriptorOrderViews.history);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cart, history);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullAPIDescriptorOrderViews {\n");
    sb.append("    cart: ").append(toIndentedString(cart)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `cart` to the URL query string
    if (getCart() != null) {
      joiner.add(String.format("%scart%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCart()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `history` to the URL query string
    if (getHistory() != null) {
      joiner.add(String.format("%shistory%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHistory()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


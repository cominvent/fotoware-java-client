/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.AnnotationOwner;
import com.cominvent.fotoware.model.AnnotationProps;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AnnotationListDataInner
 */
@JsonPropertyOrder({
  AnnotationListDataInner.JSON_PROPERTY_ALLOW_UPDATE,
  AnnotationListDataInner.JSON_PROPERTY_OWNER,
  AnnotationListDataInner.JSON_PROPERTY_COLOR,
  AnnotationListDataInner.JSON_PROPERTY_MODIFIED,
  AnnotationListDataInner.JSON_PROPERTY_PROPS,
  AnnotationListDataInner.JSON_PROPERTY_TYPE,
  AnnotationListDataInner.JSON_PROPERTY_TEXT,
  AnnotationListDataInner.JSON_PROPERTY_TOP,
  AnnotationListDataInner.JSON_PROPERTY_ALLOW_DELETE,
  AnnotationListDataInner.JSON_PROPERTY_HREF,
  AnnotationListDataInner.JSON_PROPERTY_WIDTH,
  AnnotationListDataInner.JSON_PROPERTY_LEFT,
  AnnotationListDataInner.JSON_PROPERTY_CREATED,
  AnnotationListDataInner.JSON_PROPERTY_HEIGHT,
  AnnotationListDataInner.JSON_PROPERTY_FRAGMENT_HREF
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-20T14:14:21.267957+01:00[Europe/Oslo]")
public class AnnotationListDataInner {
  public static final String JSON_PROPERTY_ALLOW_UPDATE = "allowUpdate";
  private Boolean allowUpdate;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private AnnotationOwner owner;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_MODIFIED = "modified";
  private String modified;

  public static final String JSON_PROPERTY_PROPS = "props";
  private AnnotationProps props;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_TOP = "top";
  private Integer top;

  public static final String JSON_PROPERTY_ALLOW_DELETE = "allowDelete";
  private Boolean allowDelete;

  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Integer width;

  public static final String JSON_PROPERTY_LEFT = "left";
  private Integer left;

  public static final String JSON_PROPERTY_CREATED = "created";
  private String created;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_FRAGMENT_HREF = "fragmentHref";
  private String fragmentHref;

  public AnnotationListDataInner() { 
  }

  public AnnotationListDataInner allowUpdate(Boolean allowUpdate) {
    this.allowUpdate = allowUpdate;
    return this;
  }

   /**
   * Get allowUpdate
   * @return allowUpdate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowUpdate() {
    return allowUpdate;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowUpdate(Boolean allowUpdate) {
    this.allowUpdate = allowUpdate;
  }


  public AnnotationListDataInner owner(AnnotationOwner owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnnotationOwner getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(AnnotationOwner owner) {
    this.owner = owner;
  }


  public AnnotationListDataInner color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public AnnotationListDataInner modified(String modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModified() {
    return modified;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModified(String modified) {
    this.modified = modified;
  }


  public AnnotationListDataInner props(AnnotationProps props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnnotationProps getProps() {
    return props;
  }


  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProps(AnnotationProps props) {
    this.props = props;
  }


  public AnnotationListDataInner type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public AnnotationListDataInner text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public AnnotationListDataInner top(Integer top) {
    this.top = top;
    return this;
  }

   /**
   * Get top
   * @return top
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTop() {
    return top;
  }


  @JsonProperty(JSON_PROPERTY_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTop(Integer top) {
    this.top = top;
  }


  public AnnotationListDataInner allowDelete(Boolean allowDelete) {
    this.allowDelete = allowDelete;
    return this;
  }

   /**
   * Get allowDelete
   * @return allowDelete
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowDelete() {
    return allowDelete;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowDelete(Boolean allowDelete) {
    this.allowDelete = allowDelete;
  }


  public AnnotationListDataInner href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public AnnotationListDataInner width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(Integer width) {
    this.width = width;
  }


  public AnnotationListDataInner left(Integer left) {
    this.left = left;
    return this;
  }

   /**
   * Get left
   * @return left
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLeft() {
    return left;
  }


  @JsonProperty(JSON_PROPERTY_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeft(Integer left) {
    this.left = left;
  }


  public AnnotationListDataInner created(String created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(String created) {
    this.created = created;
  }


  public AnnotationListDataInner height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(Integer height) {
    this.height = height;
  }


  public AnnotationListDataInner fragmentHref(String fragmentHref) {
    this.fragmentHref = fragmentHref;
    return this;
  }

   /**
   * Get fragmentHref
   * @return fragmentHref
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FRAGMENT_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFragmentHref() {
    return fragmentHref;
  }


  @JsonProperty(JSON_PROPERTY_FRAGMENT_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFragmentHref(String fragmentHref) {
    this.fragmentHref = fragmentHref;
  }


  /**
   * Return true if this AnnotationList_data_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotationListDataInner annotationListDataInner = (AnnotationListDataInner) o;
    return Objects.equals(this.allowUpdate, annotationListDataInner.allowUpdate) &&
        Objects.equals(this.owner, annotationListDataInner.owner) &&
        Objects.equals(this.color, annotationListDataInner.color) &&
        Objects.equals(this.modified, annotationListDataInner.modified) &&
        Objects.equals(this.props, annotationListDataInner.props) &&
        Objects.equals(this.type, annotationListDataInner.type) &&
        Objects.equals(this.text, annotationListDataInner.text) &&
        Objects.equals(this.top, annotationListDataInner.top) &&
        Objects.equals(this.allowDelete, annotationListDataInner.allowDelete) &&
        Objects.equals(this.href, annotationListDataInner.href) &&
        Objects.equals(this.width, annotationListDataInner.width) &&
        Objects.equals(this.left, annotationListDataInner.left) &&
        Objects.equals(this.created, annotationListDataInner.created) &&
        Objects.equals(this.height, annotationListDataInner.height) &&
        Objects.equals(this.fragmentHref, annotationListDataInner.fragmentHref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowUpdate, owner, color, modified, props, type, text, top, allowDelete, href, width, left, created, height, fragmentHref);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotationListDataInner {\n");
    sb.append("    allowUpdate: ").append(toIndentedString(allowUpdate)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    top: ").append(toIndentedString(top)).append("\n");
    sb.append("    allowDelete: ").append(toIndentedString(allowDelete)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    left: ").append(toIndentedString(left)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    fragmentHref: ").append(toIndentedString(fragmentHref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `allowUpdate` to the URL query string
    if (getAllowUpdate() != null) {
      joiner.add(String.format("%sallowUpdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAllowUpdate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(getOwner().toUrlQueryString(prefix + "owner" + suffix));
    }

    // add `color` to the URL query string
    if (getColor() != null) {
      joiner.add(String.format("%scolor%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getColor()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `modified` to the URL query string
    if (getModified() != null) {
      joiner.add(String.format("%smodified%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModified()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `props` to the URL query string
    if (getProps() != null) {
      joiner.add(getProps().toUrlQueryString(prefix + "props" + suffix));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `text` to the URL query string
    if (getText() != null) {
      joiner.add(String.format("%stext%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getText()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `top` to the URL query string
    if (getTop() != null) {
      joiner.add(String.format("%stop%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTop()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `allowDelete` to the URL query string
    if (getAllowDelete() != null) {
      joiner.add(String.format("%sallowDelete%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAllowDelete()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `href` to the URL query string
    if (getHref() != null) {
      joiner.add(String.format("%shref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `width` to the URL query string
    if (getWidth() != null) {
      joiner.add(String.format("%swidth%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWidth()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `left` to the URL query string
    if (getLeft() != null) {
      joiner.add(String.format("%sleft%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLeft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `created` to the URL query string
    if (getCreated() != null) {
      joiner.add(String.format("%screated%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreated()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `height` to the URL query string
    if (getHeight() != null) {
      joiner.add(String.format("%sheight%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHeight()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fragmentHref` to the URL query string
    if (getFragmentHref() != null) {
      joiner.add(String.format("%sfragmentHref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFragmentHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


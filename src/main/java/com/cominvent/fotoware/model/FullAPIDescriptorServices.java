/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.FullAPIDescriptorServicesKeepalive;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FullAPIDescriptorServices
 */
@JsonPropertyOrder({
  FullAPIDescriptorServices.JSON_PROPERTY_NAVIGATE_PREV,
  FullAPIDescriptorServices.JSON_PROPERTY_RETRANSCODE,
  FullAPIDescriptorServices.JSON_PROPERTY_RENDITION_REQUEST,
  FullAPIDescriptorServices.JSON_PROPERTY_KEEPALIVE,
  FullAPIDescriptorServices.JSON_PROPERTY_LOGOUT,
  FullAPIDescriptorServices.JSON_PROPERTY_SEARCH,
  FullAPIDescriptorServices.JSON_PROPERTY_NAVIGATE_NEXT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FullAPIDescriptorServices {
  public static final String JSON_PROPERTY_NAVIGATE_PREV = "navigate_prev";
  private String navigatePrev;

  public static final String JSON_PROPERTY_RETRANSCODE = "retranscode";
  private String retranscode;

  public static final String JSON_PROPERTY_RENDITION_REQUEST = "rendition_request";
  private String renditionRequest;

  public static final String JSON_PROPERTY_KEEPALIVE = "keepalive";
  private FullAPIDescriptorServicesKeepalive keepalive;

  public static final String JSON_PROPERTY_LOGOUT = "logout";
  private String logout;

  public static final String JSON_PROPERTY_SEARCH = "search";
  private String search;

  public static final String JSON_PROPERTY_NAVIGATE_NEXT = "navigate_next";
  private String navigateNext;

  public FullAPIDescriptorServices() { 
  }

  public FullAPIDescriptorServices navigatePrev(String navigatePrev) {
    this.navigatePrev = navigatePrev;
    return this;
  }

   /**
   * Get navigatePrev
   * @return navigatePrev
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAVIGATE_PREV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNavigatePrev() {
    return navigatePrev;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATE_PREV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigatePrev(String navigatePrev) {
    this.navigatePrev = navigatePrev;
  }


  public FullAPIDescriptorServices retranscode(String retranscode) {
    this.retranscode = retranscode;
    return this;
  }

   /**
   * Get retranscode
   * @return retranscode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETRANSCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRetranscode() {
    return retranscode;
  }


  @JsonProperty(JSON_PROPERTY_RETRANSCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetranscode(String retranscode) {
    this.retranscode = retranscode;
  }


  public FullAPIDescriptorServices renditionRequest(String renditionRequest) {
    this.renditionRequest = renditionRequest;
    return this;
  }

   /**
   * Get renditionRequest
   * @return renditionRequest
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RENDITION_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRenditionRequest() {
    return renditionRequest;
  }


  @JsonProperty(JSON_PROPERTY_RENDITION_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRenditionRequest(String renditionRequest) {
    this.renditionRequest = renditionRequest;
  }


  public FullAPIDescriptorServices keepalive(FullAPIDescriptorServicesKeepalive keepalive) {
    this.keepalive = keepalive;
    return this;
  }

   /**
   * Get keepalive
   * @return keepalive
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEEPALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FullAPIDescriptorServicesKeepalive getKeepalive() {
    return keepalive;
  }


  @JsonProperty(JSON_PROPERTY_KEEPALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeepalive(FullAPIDescriptorServicesKeepalive keepalive) {
    this.keepalive = keepalive;
  }


  public FullAPIDescriptorServices logout(String logout) {
    this.logout = logout;
    return this;
  }

   /**
   * Get logout
   * @return logout
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogout() {
    return logout;
  }


  @JsonProperty(JSON_PROPERTY_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogout(String logout) {
    this.logout = logout;
  }


  public FullAPIDescriptorServices search(String search) {
    this.search = search;
    return this;
  }

   /**
   * Get search
   * @return search
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearch() {
    return search;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearch(String search) {
    this.search = search;
  }


  public FullAPIDescriptorServices navigateNext(String navigateNext) {
    this.navigateNext = navigateNext;
    return this;
  }

   /**
   * Get navigateNext
   * @return navigateNext
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAVIGATE_NEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNavigateNext() {
    return navigateNext;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATE_NEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigateNext(String navigateNext) {
    this.navigateNext = navigateNext;
  }


  /**
   * Return true if this FullAPIDescriptor_services object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullAPIDescriptorServices fullAPIDescriptorServices = (FullAPIDescriptorServices) o;
    return Objects.equals(this.navigatePrev, fullAPIDescriptorServices.navigatePrev) &&
        Objects.equals(this.retranscode, fullAPIDescriptorServices.retranscode) &&
        Objects.equals(this.renditionRequest, fullAPIDescriptorServices.renditionRequest) &&
        Objects.equals(this.keepalive, fullAPIDescriptorServices.keepalive) &&
        Objects.equals(this.logout, fullAPIDescriptorServices.logout) &&
        Objects.equals(this.search, fullAPIDescriptorServices.search) &&
        Objects.equals(this.navigateNext, fullAPIDescriptorServices.navigateNext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(navigatePrev, retranscode, renditionRequest, keepalive, logout, search, navigateNext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullAPIDescriptorServices {\n");
    sb.append("    navigatePrev: ").append(toIndentedString(navigatePrev)).append("\n");
    sb.append("    retranscode: ").append(toIndentedString(retranscode)).append("\n");
    sb.append("    renditionRequest: ").append(toIndentedString(renditionRequest)).append("\n");
    sb.append("    keepalive: ").append(toIndentedString(keepalive)).append("\n");
    sb.append("    logout: ").append(toIndentedString(logout)).append("\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("    navigateNext: ").append(toIndentedString(navigateNext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `navigate_prev` to the URL query string
    if (getNavigatePrev() != null) {
      joiner.add(String.format("%snavigate_prev%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNavigatePrev()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `retranscode` to the URL query string
    if (getRetranscode() != null) {
      joiner.add(String.format("%sretranscode%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRetranscode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rendition_request` to the URL query string
    if (getRenditionRequest() != null) {
      joiner.add(String.format("%srendition_request%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRenditionRequest()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `keepalive` to the URL query string
    if (getKeepalive() != null) {
      joiner.add(getKeepalive().toUrlQueryString(prefix + "keepalive" + suffix));
    }

    // add `logout` to the URL query string
    if (getLogout() != null) {
      joiner.add(String.format("%slogout%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLogout()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `search` to the URL query string
    if (getSearch() != null) {
      joiner.add(String.format("%ssearch%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSearch()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `navigate_next` to the URL query string
    if (getNavigateNext() != null) {
      joiner.add(String.format("%snavigate_next%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNavigateNext()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.MetadataViewBuiltinFields;
import com.cominvent.fotoware.model.MetadataViewDetailRegionsInner;
import com.cominvent.fotoware.model.MetadataViewThumbnailFields;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * MetadataView
 */
@JsonPropertyOrder({
  MetadataView.JSON_PROPERTY_BUILTIN_FIELDS,
  MetadataView.JSON_PROPERTY_NAME,
  MetadataView.JSON_PROPERTY_DETAIL_REGIONS,
  MetadataView.JSON_PROPERTY_THUMBNAIL_FIELDS,
  MetadataView.JSON_PROPERTY_PRESERVE_MODIFICATION_TIME,
  MetadataView.JSON_PROPERTY_HREF,
  MetadataView.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-20T14:14:21.267957+01:00[Europe/Oslo]")
public class MetadataView {
  public static final String JSON_PROPERTY_BUILTIN_FIELDS = "builtinFields";
  private MetadataViewBuiltinFields builtinFields;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DETAIL_REGIONS = "detailRegions";
  private List<MetadataViewDetailRegionsInner> detailRegions;

  public static final String JSON_PROPERTY_THUMBNAIL_FIELDS = "thumbnailFields";
  private MetadataViewThumbnailFields thumbnailFields;

  public static final String JSON_PROPERTY_PRESERVE_MODIFICATION_TIME = "preserveModificationTime";
  private Boolean preserveModificationTime;

  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public MetadataView() { 
  }

  public MetadataView builtinFields(MetadataViewBuiltinFields builtinFields) {
    this.builtinFields = builtinFields;
    return this;
  }

   /**
   * Get builtinFields
   * @return builtinFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILTIN_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MetadataViewBuiltinFields getBuiltinFields() {
    return builtinFields;
  }


  @JsonProperty(JSON_PROPERTY_BUILTIN_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuiltinFields(MetadataViewBuiltinFields builtinFields) {
    this.builtinFields = builtinFields;
  }


  public MetadataView name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Human-readable display name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public MetadataView detailRegions(List<MetadataViewDetailRegionsInner> detailRegions) {
    this.detailRegions = detailRegions;
    return this;
  }

  public MetadataView addDetailRegionsItem(MetadataViewDetailRegionsInner detailRegionsItem) {
    if (this.detailRegions == null) {
      this.detailRegions = new ArrayList<>();
    }
    this.detailRegions.add(detailRegionsItem);
    return this;
  }

   /**
   * Contains descriptions of all metadata fields
   * @return detailRegions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAIL_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MetadataViewDetailRegionsInner> getDetailRegions() {
    return detailRegions;
  }


  @JsonProperty(JSON_PROPERTY_DETAIL_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetailRegions(List<MetadataViewDetailRegionsInner> detailRegions) {
    this.detailRegions = detailRegions;
  }


  public MetadataView thumbnailFields(MetadataViewThumbnailFields thumbnailFields) {
    this.thumbnailFields = thumbnailFields;
    return this;
  }

   /**
   * Get thumbnailFields
   * @return thumbnailFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUMBNAIL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MetadataViewThumbnailFields getThumbnailFields() {
    return thumbnailFields;
  }


  @JsonProperty(JSON_PROPERTY_THUMBNAIL_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThumbnailFields(MetadataViewThumbnailFields thumbnailFields) {
    this.thumbnailFields = thumbnailFields;
  }


  public MetadataView preserveModificationTime(Boolean preserveModificationTime) {
    this.preserveModificationTime = preserveModificationTime;
    return this;
  }

   /**
   * Get preserveModificationTime
   * @return preserveModificationTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRESERVE_MODIFICATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPreserveModificationTime() {
    return preserveModificationTime;
  }


  @JsonProperty(JSON_PROPERTY_PRESERVE_MODIFICATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreserveModificationTime(Boolean preserveModificationTime) {
    this.preserveModificationTime = preserveModificationTime;
  }


  public MetadataView href(String href) {
    this.href = href;
    return this;
  }

   /**
   * URL
   * @return href
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public MetadataView id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  /**
   * Return true if this MetadataView object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataView metadataView = (MetadataView) o;
    return Objects.equals(this.builtinFields, metadataView.builtinFields) &&
        Objects.equals(this.name, metadataView.name) &&
        Objects.equals(this.detailRegions, metadataView.detailRegions) &&
        Objects.equals(this.thumbnailFields, metadataView.thumbnailFields) &&
        Objects.equals(this.preserveModificationTime, metadataView.preserveModificationTime) &&
        Objects.equals(this.href, metadataView.href) &&
        Objects.equals(this.id, metadataView.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(builtinFields, name, detailRegions, thumbnailFields, preserveModificationTime, href, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataView {\n");
    sb.append("    builtinFields: ").append(toIndentedString(builtinFields)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    detailRegions: ").append(toIndentedString(detailRegions)).append("\n");
    sb.append("    thumbnailFields: ").append(toIndentedString(thumbnailFields)).append("\n");
    sb.append("    preserveModificationTime: ").append(toIndentedString(preserveModificationTime)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `builtinFields` to the URL query string
    if (getBuiltinFields() != null) {
      joiner.add(getBuiltinFields().toUrlQueryString(prefix + "builtinFields" + suffix));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `detailRegions` to the URL query string
    if (getDetailRegions() != null) {
      for (int i = 0; i < getDetailRegions().size(); i++) {
        if (getDetailRegions().get(i) != null) {
          joiner.add(getDetailRegions().get(i).toUrlQueryString(String.format("%sdetailRegions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `thumbnailFields` to the URL query string
    if (getThumbnailFields() != null) {
      joiner.add(getThumbnailFields().toUrlQueryString(prefix + "thumbnailFields" + suffix));
    }

    // add `preserveModificationTime` to the URL query string
    if (getPreserveModificationTime() != null) {
      joiner.add(String.format("%spreserveModificationTime%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPreserveModificationTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `href` to the URL query string
    if (getHref() != null) {
      joiner.add(String.format("%shref%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHref()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


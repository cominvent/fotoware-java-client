/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cominvent.fotoware.model.Account;
import com.cominvent.fotoware.model.Address;
import com.cominvent.fotoware.model.CommerceInfo;
import com.cominvent.fotoware.model.MemberProperty;
import com.cominvent.fotoware.model.UserLicenseSettings;
import com.cominvent.fotoware.model.UserPermissions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * User properties
 */
@JsonPropertyOrder({
  User.JSON_PROPERTY_ID,
  User.JSON_PROPERTY_CREATED,
  User.JSON_PROPERTY_MODIFIED,
  User.JSON_PROPERTY_REVISION,
  User.JSON_PROPERTY_USERNAME,
  User.JSON_PROPERTY_DESCRIPTION,
  User.JSON_PROPERTY_ADDRESS,
  User.JSON_PROPERTY_LICENSE,
  User.JSON_PROPERTY_COMMERCE,
  User.JSON_PROPERTY_ACCOUNT,
  User.JSON_PROPERTY_PERMISSIONS,
  User.JSON_PROPERTY_PROPERTIES,
  User.JSON_PROPERTY_FULL_NAME,
  User.JSON_PROPERTY_IS_GUEST,
  User.JSON_PROPERTY_IS_BUILT_IN_ADMINISTRATOR,
  User.JSON_PROPERTY_IS_BUILT_IN,
  User.JSON_PROPERTY_DELETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class User {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_MODIFIED = "modified";
  private OffsetDateTime modified;

  public static final String JSON_PROPERTY_REVISION = "revision";
  private Integer revision;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private Address address;

  public static final String JSON_PROPERTY_LICENSE = "license";
  private UserLicenseSettings license;

  public static final String JSON_PROPERTY_COMMERCE = "commerce";
  private CommerceInfo commerce;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private Account account;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private UserPermissions permissions;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private List<MemberProperty> properties = new ArrayList<>();

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private String fullName;

  public static final String JSON_PROPERTY_IS_GUEST = "isGuest";
  private Boolean isGuest;

  public static final String JSON_PROPERTY_IS_BUILT_IN_ADMINISTRATOR = "isBuiltInAdministrator";
  private Boolean isBuiltInAdministrator;

  public static final String JSON_PROPERTY_IS_BUILT_IN = "isBuiltIn";
  private Boolean isBuiltIn;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private OffsetDateTime deleted;

  public User() { 
  }

  @JsonCreator
  public User(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_MODIFIED) OffsetDateTime modified, 
    @JsonProperty(JSON_PROPERTY_REVISION) Integer revision, 
    @JsonProperty(JSON_PROPERTY_FULL_NAME) String fullName, 
    @JsonProperty(JSON_PROPERTY_IS_GUEST) Boolean isGuest, 
    @JsonProperty(JSON_PROPERTY_IS_BUILT_IN_ADMINISTRATOR) Boolean isBuiltInAdministrator, 
    @JsonProperty(JSON_PROPERTY_IS_BUILT_IN) Boolean isBuiltIn
  ) {
  this();
    this.id = id;
    this.created = created;
    this.modified = modified;
    this.revision = revision;
    this.fullName = fullName;
    this.isGuest = isGuest;
    this.isBuiltInAdministrator = isBuiltInAdministrator;
    this.isBuiltIn = isBuiltIn;
  }

   /**
   * User ID
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Timestamp when the user was created
   * @return created
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Timestamp when the user was modified the last time
   * @return modified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getModified() {
    return modified;
  }




   /**
   * Revision
   * @return revision
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRevision() {
    return revision;
  }




  public User username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Username
   * @return username
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public User description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public User address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Address getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(Address address) {
    this.address = address;
  }


  public User license(UserLicenseSettings license) {
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LICENSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserLicenseSettings getLicense() {
    return license;
  }


  @JsonProperty(JSON_PROPERTY_LICENSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLicense(UserLicenseSettings license) {
    this.license = license;
  }


  public User commerce(CommerceInfo commerce) {
    this.commerce = commerce;
    return this;
  }

   /**
   * Get commerce
   * @return commerce
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMERCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CommerceInfo getCommerce() {
    return commerce;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommerce(CommerceInfo commerce) {
    this.commerce = commerce;
  }


  public User account(Account account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Account getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(Account account) {
    this.account = account;
  }


  public User permissions(UserPermissions permissions) {
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserPermissions getPermissions() {
    return permissions;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermissions(UserPermissions permissions) {
    this.permissions = permissions;
  }


  public User properties(List<MemberProperty> properties) {
    this.properties = properties;
    return this;
  }

  public User addPropertiesItem(MemberProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Custom properties
   * @return properties
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MemberProperty> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProperties(List<MemberProperty> properties) {
    this.properties = properties;
  }


   /**
   * Full real name
   * @return fullName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFullName() {
    return fullName;
  }




   /**
   * User is guest
   * @return isGuest
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_GUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsGuest() {
    return isGuest;
  }




   /**
   * User is built-in Administrator
   * @return isBuiltInAdministrator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_BUILT_IN_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsBuiltInAdministrator() {
    return isBuiltInAdministrator;
  }




   /**
   * User is built-in
   * @return isBuiltIn
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_BUILT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsBuiltIn() {
    return isBuiltIn;
  }




  public User deleted(OffsetDateTime deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Deletion time (if user is marked as deleted in database)
   * @return deleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(OffsetDateTime deleted) {
    this.deleted = deleted;
  }


  /**
   * Return true if this User object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.created, user.created) &&
        Objects.equals(this.modified, user.modified) &&
        Objects.equals(this.revision, user.revision) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.description, user.description) &&
        Objects.equals(this.address, user.address) &&
        Objects.equals(this.license, user.license) &&
        Objects.equals(this.commerce, user.commerce) &&
        Objects.equals(this.account, user.account) &&
        Objects.equals(this.permissions, user.permissions) &&
        Objects.equals(this.properties, user.properties) &&
        Objects.equals(this.fullName, user.fullName) &&
        Objects.equals(this.isGuest, user.isGuest) &&
        Objects.equals(this.isBuiltInAdministrator, user.isBuiltInAdministrator) &&
        Objects.equals(this.isBuiltIn, user.isBuiltIn) &&
        Objects.equals(this.deleted, user.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, modified, revision, username, description, address, license, commerce, account, permissions, properties, fullName, isGuest, isBuiltInAdministrator, isBuiltIn, deleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    commerce: ").append(toIndentedString(commerce)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    isGuest: ").append(toIndentedString(isGuest)).append("\n");
    sb.append("    isBuiltInAdministrator: ").append(toIndentedString(isBuiltInAdministrator)).append("\n");
    sb.append("    isBuiltIn: ").append(toIndentedString(isBuiltIn)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `created` to the URL query string
    if (getCreated() != null) {
      joiner.add(String.format("%screated%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreated()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `modified` to the URL query string
    if (getModified() != null) {
      joiner.add(String.format("%smodified%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModified()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `revision` to the URL query string
    if (getRevision() != null) {
      joiner.add(String.format("%srevision%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRevision()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `username` to the URL query string
    if (getUsername() != null) {
      joiner.add(String.format("%susername%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUsername()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `address` to the URL query string
    if (getAddress() != null) {
      joiner.add(getAddress().toUrlQueryString(prefix + "address" + suffix));
    }

    // add `license` to the URL query string
    if (getLicense() != null) {
      joiner.add(getLicense().toUrlQueryString(prefix + "license" + suffix));
    }

    // add `commerce` to the URL query string
    if (getCommerce() != null) {
      joiner.add(getCommerce().toUrlQueryString(prefix + "commerce" + suffix));
    }

    // add `account` to the URL query string
    if (getAccount() != null) {
      joiner.add(getAccount().toUrlQueryString(prefix + "account" + suffix));
    }

    // add `permissions` to the URL query string
    if (getPermissions() != null) {
      joiner.add(getPermissions().toUrlQueryString(prefix + "permissions" + suffix));
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      for (int i = 0; i < getProperties().size(); i++) {
        if (getProperties().get(i) != null) {
          joiner.add(getProperties().get(i).toUrlQueryString(String.format("%sproperties%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `fullName` to the URL query string
    if (getFullName() != null) {
      joiner.add(String.format("%sfullName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFullName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isGuest` to the URL query string
    if (getIsGuest() != null) {
      joiner.add(String.format("%sisGuest%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsGuest()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isBuiltInAdministrator` to the URL query string
    if (getIsBuiltInAdministrator() != null) {
      joiner.add(String.format("%sisBuiltInAdministrator%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsBuiltInAdministrator()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isBuiltIn` to the URL query string
    if (getIsBuiltIn() != null) {
      joiner.add(String.format("%sisBuiltIn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsBuiltIn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `deleted` to the URL query string
    if (getDeleted() != null) {
      joiner.add(String.format("%sdeleted%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDeleted()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}


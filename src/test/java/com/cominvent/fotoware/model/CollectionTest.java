/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.model;

import com.cominvent.fotoware.model.AssetPreviewsInner;
import com.cominvent.fotoware.model.CollectionAltOrdersInner;
import com.cominvent.fotoware.model.CollectionClearSearch;
import com.cominvent.fotoware.model.CollectionCreateInner;
import com.cominvent.fotoware.model.CollectionMetadataEditor;
import com.cominvent.fotoware.model.CollectionPropertyValidationsInner;
import com.cominvent.fotoware.model.CollectionProps;
import com.cominvent.fotoware.model.Permission;
import com.cominvent.fotoware.model.Taxonomy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for Collection
 */
public class CollectionTest {
    private final Collection model = new Collection();

    /**
     * Model tests for Collection
     */
    @Test
    public void testCollection() {
        // TODO: test Collection
    }

    /**
     * Test the property 'altOrders'
     */
    @Test
    public void altOrdersTest() {
        // TODO: test altOrders
    }

    /**
     * Test the property 'alertHref'
     */
    @Test
    public void alertHrefTest() {
        // TODO: test alertHref
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'assets'
     */
    @Test
    public void assetsTest() {
        // TODO: test assets
    }

    /**
     * Test the property 'assetCount'
     */
    @Test
    public void assetCountTest() {
        // TODO: test assetCount
    }

    /**
     * Test the property 'canBeArchived'
     */
    @Test
    public void canBeArchivedTest() {
        // TODO: test canBeArchived
    }

    /**
     * Test the property 'canBeDeleted'
     */
    @Test
    public void canBeDeletedTest() {
        // TODO: test canBeDeleted
    }

    /**
     * Test the property 'canCopyTo'
     */
    @Test
    public void canCopyToTest() {
        // TODO: test canCopyTo
    }

    /**
     * Test the property 'canCreateFolders'
     */
    @Test
    public void canCreateFoldersTest() {
        // TODO: test canCreateFolders
    }

    /**
     * Test the property 'canHaveChildren'
     */
    @Test
    public void canHaveChildrenTest() {
        // TODO: test canHaveChildren
    }

    /**
     * Test the property 'canIngestToChildren'
     */
    @Test
    public void canIngestToChildrenTest() {
        // TODO: test canIngestToChildren
    }

    /**
     * Test the property 'canMoveTo'
     */
    @Test
    public void canMoveToTest() {
        // TODO: test canMoveTo
    }

    /**
     * Test the property 'canSelect'
     */
    @Test
    public void canSelectTest() {
        // TODO: test canSelect
    }

    /**
     * Test the property 'canUploadTo'
     */
    @Test
    public void canUploadToTest() {
        // TODO: test canUploadTo
    }

    /**
     * Test the property 'children'
     */
    @Test
    public void childrenTest() {
        // TODO: test children
    }

    /**
     * Test the property 'childCount'
     */
    @Test
    public void childCountTest() {
        // TODO: test childCount
    }

    /**
     * Test the property 'clearSearch'
     */
    @Test
    public void clearSearchTest() {
        // TODO: test clearSearch
    }

    /**
     * Test the property 'create'
     */
    @Test
    public void createTest() {
        // TODO: test create
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'dataTemplate'
     */
    @Test
    public void dataTemplateTest() {
        // TODO: test dataTemplate
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    public void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'edit'
     */
    @Test
    public void editTest() {
        // TODO: test edit
    }

    /**
     * Test the property 'hasChildren'
     */
    @Test
    public void hasChildrenTest() {
        // TODO: test hasChildren
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'isFolderNavigationEnabled'
     */
    @Test
    public void isFolderNavigationEnabledTest() {
        // TODO: test isFolderNavigationEnabled
    }

    /**
     * Test the property 'isLinkCollection'
     */
    @Test
    public void isLinkCollectionTest() {
        // TODO: test isLinkCollection
    }

    /**
     * Test the property 'isSearchable'
     */
    @Test
    public void isSearchableTest() {
        // TODO: test isSearchable
    }

    /**
     * Test the property 'isSelectable'
     */
    @Test
    public void isSelectableTest() {
        // TODO: test isSelectable
    }

    /**
     * Test the property 'isSmartFolderNavigationEnabled'
     */
    @Test
    public void isSmartFolderNavigationEnabledTest() {
        // TODO: test isSmartFolderNavigationEnabled
    }

    /**
     * Test the property 'matchingHref'
     */
    @Test
    public void matchingHrefTest() {
        // TODO: test matchingHref
    }

    /**
     * Test the property 'metadataEditor'
     */
    @Test
    public void metadataEditorTest() {
        // TODO: test metadataEditor
    }

    /**
     * Test the property 'modified'
     */
    @Test
    public void modifiedTest() {
        // TODO: test modified
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'orderRootHref'
     */
    @Test
    public void orderRootHrefTest() {
        // TODO: test orderRootHref
    }

    /**
     * Test the property 'originalURL'
     */
    @Test
    public void originalURLTest() {
        // TODO: test originalURL
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'pin'
     */
    @Test
    public void pinTest() {
        // TODO: test pin
    }

    /**
     * Test the property 'posterAsset'
     */
    @Test
    public void posterAssetTest() {
        // TODO: test posterAsset
    }

    /**
     * Test the property 'posterImages'
     */
    @Test
    public void posterImagesTest() {
        // TODO: test posterImages
    }

    /**
     * Test the property 'propertyValidations'
     */
    @Test
    public void propertyValidationsTest() {
        // TODO: test propertyValidations
    }

    /**
     * Test the property 'props'
     */
    @Test
    public void propsTest() {
        // TODO: test props
    }

    /**
     * Test the property 'reorder'
     */
    @Test
    public void reorderTest() {
        // TODO: test reorder
    }

    /**
     * Test the property 'searchQuery'
     */
    @Test
    public void searchQueryTest() {
        // TODO: test searchQuery
    }

    /**
     * Test the property 'searchString'
     */
    @Test
    public void searchStringTest() {
        // TODO: test searchString
    }

    /**
     * Test the property 'searchURL'
     */
    @Test
    public void searchURLTest() {
        // TODO: test searchURL
    }

    /**
     * Test the property 'smartFolderHeader'
     */
    @Test
    public void smartFolderHeaderTest() {
        // TODO: test smartFolderHeader
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'taxonomies'
     */
    @Test
    public void taxonomiesTest() {
        // TODO: test taxonomies
    }

    /**
     * Test the property 'uploadHref'
     */
    @Test
    public void uploadHrefTest() {
        // TODO: test uploadHref
    }

}

/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.api;

import com.cominvent.fotoware.client.ApiException;
import com.cominvent.fotoware.model.CollectionInfo;
import com.cominvent.fotoware.model.PeopleList;
import com.cominvent.fotoware.model.Sharing;
import com.cominvent.fotoware.model.SharingLinkList;
import com.cominvent.fotoware.model.SharingUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AlbumsSharingApi
 */
@Ignore
public class AlbumsSharingApiTest {

    private final AlbumsSharingApi api = new AlbumsSharingApi();

    
    /**
     * Search among the users and groups you have permission to share albums with
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMePeopleGetTest() throws ApiException {
        String q = null;
        PeopleList response = 
        api.fotowebMePeopleGet(q);
        
        // TODO: test validations
    }
    
    /**
     * Get all information for an album for a specfic user; including properties, assets in the album etc.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebUsersUseridAlbumsAlbumidGetTest() throws ApiException {
        String userid = null;
        String albumid = null;
        CollectionInfo response = 
        api.fotowebUsersUseridAlbumsAlbumidGet(userid, albumid);
        
        // TODO: test validations
    }
    
    /**
     * Gets sharing details for an album for a specfic user; including any shares, public link and user/groups shares
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebUsersUseridAlbumsAlbumidSharesGetTest() throws ApiException {
        String userid = null;
        String albumid = null;
        Sharing response = 
        api.fotowebUsersUseridAlbumsAlbumidSharesGet(userid, albumid);
        
        // TODO: test validations
    }
    
    /**
     * Make updates to album sharing for an album.
     *
     * This is mainly used for enabling/disabling Download permissions on public sharing link 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebUsersUseridAlbumsAlbumidSharesPatchTest() throws ApiException {
        String userid = null;
        String albumid = null;
        SharingUpdate sharingUpdate = null;
        SharingLinkList response = 
        api.fotowebUsersUseridAlbumsAlbumidSharesPatch(userid, albumid, sharingUpdate);
        
        // TODO: test validations
    }
    
}

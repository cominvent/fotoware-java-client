/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.api;

import com.cominvent.fotoware.client.ApiException;
import com.cominvent.fotoware.model.AssetLinkList;
import com.cominvent.fotoware.model.CartUpdate;
import com.cominvent.fotoware.model.Count;
import com.cominvent.fotoware.model.Order;
import com.cominvent.fotoware.model.OrderList;
import com.cominvent.fotoware.model.OrderSubmissionInfo;
import com.cominvent.fotoware.model.OrderUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for OrdersApi
 */
@Ignore
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    
    /**
     * Get the count of items in the users cart
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMeCartGetTest() throws ApiException {
        Count response = 
        api.fotowebMeCartGet();
        
        // TODO: test validations
    }
    
    /**
     * Add item(s) to users personal cart
     *
     * Add one or more items to the users shopping cart by using the assets url.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMeCartPostTest() throws ApiException {
        AssetLinkList assetLinkList = null;
        
        api.fotowebMeCartPost(assetLinkList);
        
        // TODO: test validations
    }
    
    /**
     * Edit the content of a cart
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMeCartPutTest() throws ApiException {
        CartUpdate cartUpdate = null;
        
        api.fotowebMeCartPut(cartUpdate);
        
        // TODO: test validations
    }
    
    /**
     * Users personal order list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMeOrdersGetTest() throws ApiException {
        OrderList response = 
        api.fotowebMeOrdersGet();
        
        // TODO: test validations
    }
    
    /**
     * Submit the shopping cart to an order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebMeOrdersPostTest() throws ApiException {
        CartUpdate cartUpdate = null;
        OrderSubmissionInfo response = 
        api.fotowebMeOrdersPost(cartUpdate);
        
        // TODO: test validations
    }
    
    /**
     * Site&#39;s global list of approved orders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebOrdersApprovedGetTest() throws ApiException {
        Count response = 
        api.fotowebOrdersApprovedGet();
        
        // TODO: test validations
    }
    
    /**
     * Site&#39;s global order history
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebOrdersGetTest() throws ApiException {
        Count response = 
        api.fotowebOrdersGet();
        
        // TODO: test validations
    }
    
    /**
     * This request can be used to modify an existing order that is in pending or created state
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebOrdersOrderhrefPatchTest() throws ApiException {
        String orderhref = null;
        OrderUpdate orderUpdate = null;
        Order response = 
        api.fotowebOrdersOrderhrefPatch(orderhref, orderUpdate);
        
        // TODO: test validations
    }
    
    /**
     * Site&#39;s global list of pending orders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebOrdersPendingGetTest() throws ApiException {
        Count response = 
        api.fotowebOrdersPendingGet();
        
        // TODO: test validations
    }
    
    /**
     * Site&#39;s global list of rejected orders
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebOrdersRejectedGetTest() throws ApiException {
        Count response = 
        api.fotowebOrdersRejectedGet();
        
        // TODO: test validations
    }
    
}

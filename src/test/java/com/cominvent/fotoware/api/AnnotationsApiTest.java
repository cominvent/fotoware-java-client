/*
 * FotoWare API
 * This reference documents the available endpoints for FotoWare's API. <br/> Click the Authorize button at the top of the page to try the API with your own FotoWare as a Service tenant.<br/> To enable authorization and testing of the API on an on-premises server, <a target=\"_blank\" href='https://learn.fotoware.com/Integrations_and_APIs/001_The_FotoWare_API/FotoWare_API_Overview/Exploring_the_FotoWare_API_with_Swagger'>please follow the instructions in our software documentation</a><br/> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cominvent.fotoware.api;

import com.cominvent.fotoware.client.ApiException;
import com.cominvent.fotoware.model.Annotation;
import com.cominvent.fotoware.model.AnnotationList;
import com.cominvent.fotoware.model.Count;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AnnotationsApi
 */
@Ignore
public class AnnotationsApiTest {

    private final AnnotationsApi api = new AnnotationsApi();

    
    /**
     * Delete an annotation from an asset
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidDeleteTest() throws ApiException {
        String archiveid = null;
        String folderpath = null;
        String asset = null;
        String annotationid = null;
        
        api.fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidDelete(archiveid, folderpath, asset, annotationid);
        
        // TODO: test validations
    }
    
    /**
     * Get the annotation for an asset based on the annotation id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidGetTest() throws ApiException {
        String archiveid = null;
        String folderpath = null;
        String asset = null;
        String annotationid = null;
        Annotation response = 
        api.fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidGet(archiveid, folderpath, asset, annotationid);
        
        // TODO: test validations
    }
    
    /**
     * Edit an annotation on an asset
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidPatchTest() throws ApiException {
        String archiveid = null;
        String folderpath = null;
        String asset = null;
        String annotationid = null;
        Annotation annotation = null;
        
        api.fotowebArchivesArchiveidFolderpathAssetAnnotationsAnnotationidPatch(archiveid, folderpath, asset, annotationid, annotation);
        
        // TODO: test validations
    }
    
    /**
     * Get all the annotations for an asset
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebArchivesArchiveidFolderpathAssetAnnotationsGetTest() throws ApiException {
        String archiveid = null;
        String folderpath = null;
        String asset = null;
        AnnotationList response = 
        api.fotowebArchivesArchiveidFolderpathAssetAnnotationsGet(archiveid, folderpath, asset);
        
        // TODO: test validations
    }
    
    /**
     * Add a new annotation for an asset
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fotowebArchivesArchiveidFolderpathAssetAnnotationsPostTest() throws ApiException {
        String archiveid = null;
        String folderpath = null;
        String asset = null;
        Annotation annotation = null;
        Annotation response = 
        api.fotowebArchivesArchiveidFolderpathAssetAnnotationsPost(archiveid, folderpath, asset, annotation);
        
        // TODO: test validations
    }
    
}
